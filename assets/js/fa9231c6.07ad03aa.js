"use strict";(self.webpackChunkgo_eagle_org_2=self.webpackChunkgo_eagle_org_2||[]).push([[9321],{3905:function(e,n,t){t.d(n,{Zo:function(){return g},kt:function(){return u}});var o=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,l=function(e,n){if(null==e)return{};var t,o,l={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=o.createContext({}),p=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},g=function(e){var n=p(e.components);return o.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,c=e.parentName,g=a(e,["components","mdxType","originalType","parentName"]),m=p(t),u=l,d=m["".concat(c,".").concat(u)]||m[u]||s[u]||i;return t?o.createElement(d,r(r({ref:n},g),{},{components:t})):o.createElement(d,r({ref:n},g))}));function u(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=m;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:l,r[1]=a;for(var p=2;p<i;p++)r[p]=t[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9908:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return g}});var o=t(7462),l=t(3366),i=(t(7294),t(3905)),r=["components"],a={id:"go-deploy",title:"\u642d\u5efaGo\u5f00\u53d1\u73af\u5883",description:"Eagle \u4e00\u5957\u8f7b\u91cf\u7ea7 Go \u5fae\u670d\u52a1\u6846\u67b6\uff0c\u5305\u542b\u5927\u91cf\u5fae\u670d\u52a1\u76f8\u5173\u6846\u67b6\u53ca\u5de5\u5177",keywords:["Go","Eagle","Toolkit","Framework","Microservices","HTTP"],slug:"/deployment/go-deploy"},c=void 0,p={unversionedId:"deployment/go-deploy",id:"deployment/go-deploy",isDocsHomePage:!1,title:"\u642d\u5efaGo\u5f00\u53d1\u73af\u5883",description:"Eagle \u4e00\u5957\u8f7b\u91cf\u7ea7 Go \u5fae\u670d\u52a1\u6846\u67b6\uff0c\u5305\u542b\u5927\u91cf\u5fae\u670d\u52a1\u76f8\u5173\u6846\u67b6\u53ca\u5de5\u5177",source:"@site/docs/deployment/go-deploy.md",sourceDirName:"deployment",slug:"/deployment/go-deploy",permalink:"/docs/deployment/go-deploy",editUrl:"https://github.com/go-eagle/go-eagle.org/edit/main/docs/deployment/go-deploy.md",version:"current",frontMatter:{id:"go-deploy",title:"\u642d\u5efaGo\u5f00\u53d1\u73af\u5883",description:"Eagle \u4e00\u5957\u8f7b\u91cf\u7ea7 Go \u5fae\u670d\u52a1\u6846\u67b6\uff0c\u5305\u542b\u5927\u91cf\u5fae\u670d\u52a1\u76f8\u5173\u6846\u67b6\u53ca\u5de5\u5177",keywords:["Go","Eagle","Toolkit","Framework","Microservices","HTTP"],slug:"/deployment/go-deploy"},sidebar:"docs",previous:{title:"gRPC",permalink:"/docs/component/transport/grpc"},next:{title:"jaeger\u73af\u5883\u90e8\u7f72",permalink:"/docs/deployment/jaeger-deploy"}},g=[{value:"Go \u73af\u5883\u5b89\u88c5",id:"go-\u73af\u5883\u5b89\u88c5",children:[]},{value:"\u73af\u5883\u53d8\u91cf\u914d\u7f6e",id:"\u73af\u5883\u53d8\u91cf\u914d\u7f6e",children:[]},{value:"ProtoBuf \u73af\u5883\u5b89\u88c5",id:"protobuf-\u73af\u5883\u5b89\u88c5",children:[{value:"\u5b89\u88c5 protoc \u7f16\u8bd1\u5668",id:"\u5b89\u88c5-protoc-\u7f16\u8bd1\u5668",children:[]},{value:"\u5b89\u88c5 protoc-gen-go \u63d2\u4ef6",id:"\u5b89\u88c5-protoc-gen-go-\u63d2\u4ef6",children:[]},{value:"\u7f16\u8bd1\u5b89\u88c5 protoc",id:"\u7f16\u8bd1\u5b89\u88c5-protoc",children:[]}]},{value:"Go \u5f00\u53d1 IDE \u5b89\u88c5\u548c\u914d\u7f6e",id:"go-\u5f00\u53d1-ide-\u5b89\u88c5\u548c\u914d\u7f6e",children:[{value:"\u5b89\u88c5vim",id:"\u5b89\u88c5vim",children:[]},{value:"\u914d\u7f6ebashrc",id:"\u914d\u7f6ebashrc",children:[]},{value:"\u68c0\u67e5 nvim \u662f\u5426\u5b89\u88c5\u6210\u529f",id:"\u68c0\u67e5-nvim-\u662f\u5426\u5b89\u88c5\u6210\u529f",children:[]},{value:"\u914d\u7f6e neovim",id:"\u914d\u7f6e-neovim",children:[]}]},{value:"Reference",id:"reference",children:[]}],s={toc:g};function m(e){var n=e.components,t=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"go-\u73af\u5883\u5b89\u88c5"},"Go \u73af\u5883\u5b89\u88c5"),(0,i.kt)("p",null,"\u4e0b\u8f7d\u5730\u5740\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://go.dev/dl/"},"https://go.dev/dl/")),(0,i.kt)("p",null,"\u4e0b\u8f7d\u5177\u4f53\u5b89\u88c5\u5305, \u4ee5\u4e0b\u8f7dLinux\u5b89\u88c5\u5305\u4e3a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ wget https://golang.google.cn/dl/go1.17.10.linux-amd64.tar.gz\n")),(0,i.kt)("p",null,"\u89e3\u538b\u5e76\u5b89\u88c5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ tar -xvzf go1.17.10.linux-amd64.tar.gz -C /usr/local\n\n# \u67e5\u770b\u5b89\u88c5\u76ee\u5f55\n$ ll /usr/local/go\n\n# \u67e5\u770b\u5b89\u88c5\u7684\u7248\u672c\n$ go version\n# Output\ngo version go1.17.10 linux/amd64\n")),(0,i.kt)("h2",{id:"\u73af\u5883\u53d8\u91cf\u914d\u7f6e"},"\u73af\u5883\u53d8\u91cf\u914d\u7f6e"),(0,i.kt)("p",null,"vim $HOME/.bashrc"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"/.bashrc\u53ef\u4ee5\u66ff\u6362\u4e3a .zshrc, \u914d\u7f6e\u6587\u4ef6\u4ee5\u81ea\u5df1\u4f7f\u7528\u7684\u4e3a\u51c6")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'\ntee -a $HOME/.bashrc <<\'EOF\'\n# go env\nexport GOROOT="/usr/local/go"             # GOROOT \u8bbe\u7f6e\nexport GOPATH=$HOME/go                    # GOPATH \u8bbe\u7f6e\nexport PATH=$GOROOT/bin:$GOPATH/bin:$PATH # \u52a0\u5165\u5230 PATH \u8def\u5f84\nexport GO111MODULE="on"                   # \u5f00\u542f Go moudles\nexport GOPROXY=https://goproxy.cn,direct  # \u4ee3\u7406\u670d\u52a1\u5668\u8bbe\u7f6e\nexport GOSUMDB=off                        # \u5173\u95ed\u6821\u9a8c Go \u4f9d\u8d56\u5305\u7684\u54c8\u5e0c\u503c\nEOF\n')),(0,i.kt)("h2",{id:"protobuf-\u73af\u5883\u5b89\u88c5"},"ProtoBuf \u73af\u5883\u5b89\u88c5"),(0,i.kt)("h3",{id:"\u5b89\u88c5-protoc-\u7f16\u8bd1\u5668"},"\u5b89\u88c5 protoc \u7f16\u8bd1\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ PB_REL="https://github.com/protocolbuffers/protobuf/releases"\n# \u5982\u679c\u662fmacOS \u53ef\u4ee5\u6539\u4e3a osx\n$ OS="linux"\n$ VERSION="3.19.4"\n$ curl -LO $PB_REL/download/v$VERSION/protoc-$VERSION-$OS-x86_64.zip\n\n$ unzip protoc-$VERSION-$OS-x86_64.zip -d /usr/local\n\n$ export PATH="$PATH:/usr/local/bin"\n')),(0,i.kt)("p",null,"\u67e5\u770b\u7248\u672c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"protoc --version\nlibprotoc 3.15.6\n")),(0,i.kt)("h3",{id:"\u5b89\u88c5-protoc-gen-go-\u63d2\u4ef6"},"\u5b89\u88c5 protoc-gen-go \u63d2\u4ef6"),(0,i.kt)("p",null,"\u8fd0\u884c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"go get -u github.com/golang/protobuf/{helloworld,protoc-gen-go}\n")),(0,i.kt)("p",null,"\u7f16\u8bd1\u540e\u4f1a\u5b89\u88c5 ",(0,i.kt)("inlineCode",{parentName:"p"},"protoc-gen-go")," \u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"$GOBIN")," \u76ee\u5f55, \u9ed8\u8ba4\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin"),".",(0,i.kt)("br",{parentName:"p"}),"\n","\u8be5\u76ee\u5f55\u5fc5\u987b\u5728\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf ",(0,i.kt)("inlineCode",{parentName:"p"},"$PATH\u4e2d"),"\uff0c\u8fd9\u6837\u5728\u7f16\u8bd1 ",(0,i.kt)("inlineCode",{parentName:"p"},".proto")," \u6587\u4ef6\u65f6 ",(0,i.kt)("inlineCode",{parentName:"p"},"protocol")," \u7f16\u8bd1\u5668\u624d\u80fd\u627e\u5230\u63d2\u4ef6\u3002"),(0,i.kt)("h3",{id:"\u7f16\u8bd1\u5b89\u88c5-protoc"},"\u7f16\u8bd1\u5b89\u88c5 protoc"),(0,i.kt)("p",null,"\u5982\u679c\u9700\u8981\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u7f16\u8bd1\u5b89\u88c5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# \u5b89\u88c5\u4f9d\u8d56\u5de5\u5177\n$ sudo yum -y install make autoconf automake cmake perl-CPAN libcurl-devel libtool gcc gcc-c++ glibc-headers zlib-devel git-lfs telnet ctags lrzsz jq expat-devel openssl-devel\n\n# \u7f16\u8bd1\u5b89\u88c5 protoc\n\n# \u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 protobuf\n$ cd /tmp/\n$ git clone --depth=1 https://github.com/protocolbuffers/protobuf\n$ cd protobuf\n$ ./autogen.sh\n$ ./configure\n$ make\n$ sudo make install\n$ protoc --version # \u67e5\u770b protoc \u7248\u672c\uff0c\u6210\u529f\u8f93\u51fa\u7248\u672c\u53f7\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\nlibprotoc 3.15.6\n\n# \u7b2c\u4e8c\u6b65\uff1a\u5b89\u88c5 protoc-gen-go\n$ go get -u github.com/golang/protobuf/protoc-gen-go\n\n")),(0,i.kt)("h2",{id:"go-\u5f00\u53d1-ide-\u5b89\u88c5\u548c\u914d\u7f6e"},"Go \u5f00\u53d1 IDE \u5b89\u88c5\u548c\u914d\u7f6e"),(0,i.kt)("p",null,"\u4e3b\u6d41\u7684\u6709\u4e09\u79cd"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Goland"),(0,i.kt)("li",{parentName:"ul"},"VSCode"),(0,i.kt)("li",{parentName:"ul"},"Vim(NeoVim)")),(0,i.kt)("p",null,"\u53ef\u4ee5\u6839\u636e\u4e2a\u4eba\u7231\u597d\u6765\u8fdb\u884c\u9009\u62e9\u3002"),(0,i.kt)("h3",{id:"\u5b89\u88c5vim"},"\u5b89\u88c5vim"),(0,i.kt)("p",null,"\u8fd9\u91cc\u4ee5 NeoVim \u4e3a\u4f8b\u8fdb\u884c\u5b89\u88c5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Linux\n$ sudo pip3 install pynvim\n$ sudo yum -y install neovim\n\n# macOS\nbrew install neovim\npython3 -m pip install pynvim\n")),(0,i.kt)("h3",{id:"\u914d\u7f6ebashrc"},"\u914d\u7f6ebashrc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"tee -a $HOME/.bashrc <<'EOF'\n# Configure for nvim\nexport EDITOR=nvim # \u9ed8\u8ba4\u7684\u7f16\u8f91\u5668\nalias vim=\"nvim\"\nEOF\n")),(0,i.kt)("h3",{id:"\u68c0\u67e5-nvim-\u662f\u5426\u5b89\u88c5\u6210\u529f"},"\u68c0\u67e5 nvim \u662f\u5426\u5b89\u88c5\u6210\u529f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ bash\n$ vi --version # \u8f93\u51fa NVIM v0.3.8 \u8bf4\u660e\u5b89\u88c5\u6210\u529f\nNVIM v0.3.8\nBuild type: RelWithDebInfo\n...\n")),(0,i.kt)("h3",{id:"\u914d\u7f6e-neovim"},"\u914d\u7f6e neovim"),(0,i.kt)("h4",{id:"\u5b89\u88c5-plug-\u63d2\u4ef6"},"\u5b89\u88c5 plug \u63d2\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# see: see: https://github.com/junegunn/vim-plug#toc1\nsh -c 'curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs \\\n       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'\n")),(0,i.kt)("h4",{id:"\u914d\u7f6e-initvim"},"\u914d\u7f6e init.vim"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# vim ~/.config/nvim/init.vim\nlet mapleader = \",\"\n# find python3: which python3\nlet g:python3_host_prog = '/usr/local/bin/python3'\n\nfiletype on\nfiletype indent on\nfiletype plugin on\n\nset encoding=UTF-8\n\nsyntax on\nset nocompatible\nset hlsearch\nset number relativenumber\nset laststatus=2\nset vb\nset ruler\nset spelllang=en_us\nset autoindent\nset colorcolumn=80\nset mouse=a\nset clipboard=unnamed\nset noscrollbind\nset wildmenu\nset autochdir\n\nhi Search cterm=NONE ctermfg=black ctermbg=red\n\n\" No more Arrow Keys, deal with it\nnoremap <Up> <NOP>\nnoremap <Down> <NOP>\nnoremap <Left> <NOP>\nnoremap <Right> <NOP>\n\n\" netrw\n\nnnoremap - :Explore<CR>\nlet g:netrw_banner = 0\nlet g:netrw_liststyle = 3\nlet g:netrw_bufsettings = 'noma nomod nu nobl nowrap ro'\nautocmd FileType netrw setl bufhidden=delete\n\n\"-- netrw END\n\n\" plug \ncall plug#begin()\n\"> Must Have\nPlug 'vim-airline/vim-airline' \" https://github.com/vim-airline/vim-airline\nPlug 'ctrlpvim/ctrlp.vim'      \" https://github.com/ctrlpvim/ctrlp.vim\nPlug 'ryanoasis/vim-devicons'  \" https://github.com/ryanoasis/vim-devicons + https://github.com/ryanoasis/nerd-fonts/\nPlug 'tpope/vim-commentary'    \" https://github.com/tpope/vim-commentary\nPlug 'airblade/vim-gitgutter'  \" https://github.com/airblade/vim-gitgutter\nPlug 'mkitt/tabline.vim'       \" https://github.com/mkitt/tabline.vim\nPlug 'github/copilot.vim'      \" https://github.com/github/copilot.vim\n\n\"> Go\nPlug 'fatih/vim-go', { 'do': ':GoInstallBinaries' } \" https://github.com/fatih/vim-go\nPlug 'neoclide/coc.nvim', {'branch': 'release'}     \" https://github.com/neoclide/coc.nvim\nPlug 'SirVer/ultisnips'                             \" https://github.com/sirver/UltiSnips\n\n\"> Theme\nPlug 'NLKNguyen/papercolor-theme' \" https://github.com/NLKNguyen/papercolor-theme\ncall plug#end()\n\n\"-- plug END\n\n\" ctrlp\nset runtimepath^=~/.vim/bundle/ctrlp.vim\nlet g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']\n\n\" vim-gitgutter\n\nset updatetime=500\n\n\"-- vim-gitgutter END\n\n\" papercolor-theme\n\nset termguicolors\nset background=dark\ncolorscheme PaperColor\n\n\"-- papercolor-theme END\n")),(0,i.kt)("h4",{id:"\u5b89\u88c5\u63d2\u4ef6"},"\u5b89\u88c5\u63d2\u4ef6"),(0,i.kt)("p",null,"\u4f7f\u7528 vim \u6253\u5f00\u4efb\u4e00\u6587\u4ef6\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u4f9d\u8d56\u5305\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},":PlugInstall\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u63d2\u4ef6\u9ed8\u8ba4\u5b89\u88c5\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.config/nvim/plugged")," \u76ee\u5f55\u4e0b")),(0,i.kt)("h4",{id:"\u6267\u884c\u5065\u5eb7\u68c0\u67e5"},"\u6267\u884c\u5065\u5eb7\u68c0\u67e5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},":checkhealth\n")),(0,i.kt)("h4",{id:"\u914d\u7f6e\u63d2\u4ef6-govim"},"\u914d\u7f6e\u63d2\u4ef6 go.vim"),(0,i.kt)("p",null,"\u521b\u5efa\u76ee\u5f55 ",(0,i.kt)("inlineCode",{parentName:"p"},"mkdir -p ~/.config/nvim/ftdetect")),(0,i.kt)("p",null,"\u65b0\u5efa\u6587\u4ef6\u5e76\u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.config/nvim/ftdetect/go.vim")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# vim ~/.config/nvim/ftdetect/go.vim\n\"-- vim-go specific configuration\n\n\" run :GoBuild or :GoTestCompile based on the go file\nfunction! s:build_go_files()\n  let l:file = expand('%')\n  if l:file =~# '^\\f\\+_test\\.go$'\n    call go#test#Test(0, 1)\n  elseif l:file =~# '^\\f\\+\\.go$'\n    call go#cmd#Build(0)\n  endif\nendfunction\n\nautocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>\nautocmd FileType go nmap <Leader>c <Plug>(go-coverage-toggle)\nautocmd FileType go nmap <leader>t <Plug>(go-test)\n\nautocmd Filetype go command! -bang A call go#alternate#Switch(<bang>0, 'edit')\nautocmd Filetype go command! -bang AV call go#alternate#Switch(<bang>0, 'vsplit')\nautocmd Filetype go command! -bang AS call go#alternate#Switch(<bang>0, 'split')\nautocmd Filetype go command! -bang AT call go#alternate#Switch(<bang>0, 'tabe')\n\nautocmd FileType go setlocal foldmethod=expr foldexpr=getline(v:lnum)=~'^\\s*'.&commentstring[0]\n\nlet g:go_list_type = \"quickfix\"    \" error lists are of type quickfix\nlet g:go_fmt_command = \"goimports\" \" automatically format and rewrite imports\nlet g:go_auto_sameids = 1          \" highlight matching identifiers\n\n\"-- highlight config\nlet g:go_highlight_types = 1\nlet g:go_highlight_fields = 1\nlet g:go_highlight_functions = 1\nlet g:go_highlight_function_calls = 1\nlet g:go_highlight_extra_types = 1\nlet g:go_highlight_generate_tags = 1\n\n\"-- vim-go specific configuration (END)\n\n\"-- coc.nvim specific configuration\n\"-- see: https://github.com/neoclide/coc.nvim#example-vim-configuration\n\"-- see: https://unpkg.com/coc.nvim@0.0.77/doc/coc.cnx\n\nset hidden\nset cmdheight=2\nset updatetime=300\nset shortmess+=c\nif has(\"patch-8.1.1564\")\n  set signcolumn=number\nelse\n  set signcolumn=yes\nendif\n\nnmap <silent> gd <Plug>(coc-definition)\nnmap <silent> gy <Plug>(coc-type-definition)\nnmap <silent> gr <Plug>(coc-references)\nnmap <silent> gi <Plug>(coc-implementation)\nnmap <silent> rn <Plug>(coc-rename)\n\nnnoremap <silent> K :call <SID>show_documentation()<CR>\nfunction! s:show_documentation()\n  if (index(['vim','help'], &filetype) >= 0)\n    execute 'h '.expand('<cword>')\n  else\n    call CocAction('doHover')\n  endif\nendfunction\n\n\"-- coc.nvim specific configuration (END)\n")),(0,i.kt)("h4",{id:"\u914d\u7f6ego\u8865\u5168"},"\u914d\u7f6ego\u8865\u5168"),(0,i.kt)("p",null,"\u65b0\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"vim ~/.config/nvim/coc-settings.json\n")),(0,i.kt)("p",null,"\u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "languageserver": {\n        "golang": {\n            "command": "gopls",\n            "rootPatterns": [\n                "go.mod"\n            ],\n            "filetypes": [\n                "go"\n            ]\n        }\n    },\n    "suggest.noselect": false,\n    "coc.preferences.diagnostic.displayByAle": true,\n    "suggest.floatEnable": true\n}\n')),(0,i.kt)("p",null,"\u5b89\u88c5\u6269\u5c55"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a \u9700\u8981\u5b89\u88c5 node\uff0c\u5426\u5219\u5b89\u88c5\u65e0\u6548")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},":CocInstall coc-json coc-tsserver\n\n:CocInstall coc-python\n")),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"init\u914d\u7f6e\uff1a",(0,i.kt)("a",{parentName:"li",href:"https://gist.github.com/MarioCarrion/836dc17e15096b6c2414ce9b0acd93a4"},"https://gist.github.com/MarioCarrion/836dc17e15096b6c2414ce9b0acd93a4")),(0,i.kt)("li",{parentName:"ul"},"go.vim: ",(0,i.kt)("a",{parentName:"li",href:"https://gist.github.com/MarioCarrion/99f6a6110796cff5df118822472a0bc9"},"https://gist.github.com/MarioCarrion/99f6a6110796cff5df118822472a0bc9")),(0,i.kt)("li",{parentName:"ul"},"\u5b57\u4f53\u5b89\u88c5\uff1a",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ryanoasis/nerd-fonts/"},"https://github.com/ryanoasis/nerd-fonts/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rafi/vim-config"},"https://github.com/rafi/vim-config")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://ctrlpvim.github.io/ctrlp.vim/"},"https://ctrlpvim.github.io/ctrlp.vim/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ctrlpvim/ctrlp.vim"},"https://github.com/ctrlpvim/ctrlp.vim")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://wklken.me/posts/2015/06/07/vim-plugin-ctrlp.html"},"https://wklken.me/posts/2015/06/07/vim-plugin-ctrlp.html"))))}m.isMDXComponent=!0}}]);